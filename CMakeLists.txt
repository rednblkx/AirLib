cmake_minimum_required(VERSION 3.10)

# set(CMAKE_BUILD_TYPE Debug)

project(AirLib LANGUAGES CXX)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
if (${LINUX})
  find_package(OpenSSL REQUIRED)
  find_package(Boost CONFIG REQUIRED COMPONENTS system)
  pkg_search_module(DNSSD avahi-compat-libdns_sd)
  add_compile_definitions(LINUX)
elseif (${ANDROID})
  find_package(Boost CONFIG REQUIRED COMPONENTS system asio beast any)
  find_package(openssl REQUIRED CONFIG)
  find_package(curl REQUIRED CONFIG)
  find_package(sodium REQUIRED CONFIG)
endif ()

add_subdirectory(external/plistcpp)

aux_source_directory(. SRCS)
add_library(AirLib SHARED ${SRCS} dnssd/dnssd.cpp)
target_include_directories(AirLib PRIVATE . external dnssd)
target_link_libraries(AirLib PlistCpp)
target_compile_definitions(AirLib PRIVATE OPENSSL_API_COMPAT=0x10101000L)
if (Boost_FOUND)
  include_directories(${Boost_INCLUDE_DIRS})
  target_link_libraries(AirLib Boost::system)
else()
  message(FATAL_ERROR "Boost library not found. Please install Boost.")
endif()
if(${LINUX})
  target_sources(AirLib PRIVATE dnssd/browse_avahi.cpp)
  target_link_libraries(AirLib sodium crypto dns_sd curl)
elseif (${ANDROID})
  target_link_libraries(AirLib sodium::sodium openssl::crypto curl::curl android log Boost::asio Boost::beast Boost::any)
endif()
